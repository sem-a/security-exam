**Задача: Получение информации о уязвимостях и отключение локального сервера**

1. **Подключение к серверу по SSH**:
   1. **Убедитесь, что у вас есть доступ к терминалу**:
   - На Windows вы можете использовать PowerShell или командную строку (cmd). Если установлен PuTTY — это также хороший вариант.
   - На Mac и Linux используйте встроенный терминал.

2. **Получите IP-адрес сервера**:
   - Убедитесь, что знаете локальный или внешний IP-адрес сервера, к которому хотите подключиться. Например: `192.168.0.10`.

3. **Откройте терминал/консоль**:
   - Запустите приложение для работы с консолью на вашем компьютере.

4. **Введите команду подключения**:
   Введите следующую команду в открывшемся окне терминала:

```bash
ssh имя_пользователя@IP-адрес_сервера
```

Замените `имя_пользователя` на ваше имя пользователя на удаленном сервере и `IP-адрес_сервера` на фактический адрес вашего сервера (например):

```bash
ssh user@192.168.0.10
```

5. **Нажмите Enter**: 
После ввода команды нажмите клавишу Enter для выполнения запроса.

6. **Ввод пароля при необходимости**:
    - Если это ваш первый раз подключения к этому серверу через SSH, вам будет предложено подтвердить добавление ключа безопасности этого хоста в список известных хостов; просто напишите "yes" и нажмите Enter.
    - Затем система запросит ввод пароля от учетной записи пользователя на этом сервере.

7. **Проверьте успешность подключения**:
    Если все прошло успешно, вы должны увидеть приглашение оболочки вашего удаленного сервера (обычно отображается путь до домашней директории), например:

```bash
user@hostname:~$
```

2. **Получение зашифрованной ссылки на другой сайт**:
   - После успешного подключения в консоли отобразится зашифрованная ссылка вида: `U2FsdGVkX19hZGRlZm9yZW5jZS4=`.

3. **Расшифровка ссылки**:
1. **Получение ключа для расшифровки**:
   - Убедитесь, что у вас есть предоставленный ключ для расшифровки строки. В данном случае это `my_secret_key`. Этот ключ необходим для выполнения операции дешифрования.

2. **Установка OpenSSL (если необходимо)**:
   - Если на вашем компьютере еще не установлен OpenSSL, вам нужно его установить.
     - На Windows вы можете скачать установщик с официального сайта или использовать пакетный менеджер Chocolatey: 
       ```bash
       choco install openssl
       ```
     - На Mac можно установить через Homebrew:
       ```bash
       brew install openssl
       ```
     - Для Linux обычно OpenSSL уже предустановлен; если нет, используйте команду установки вашего дистрибутива (например):
       ```bash
       sudo apt-get install openssl  # Для Ubuntu/Debian
       ```

3. **Выполнение команды для расшифровки**:
   - Откройте терминал/консоль и введите следующую команду замены значения зашумленной ссылки на вашу строку (`U2FsdGVkX19hZGRlZm9yZW5jZS4=`) и замените `my_secret_key` вашим фактическим ключом.
   
```bash
echo "U2FsdGVkX19hZGRlZm9yZW5jZS4=" | openssl enc -aes-256-cbc -d -a -pass pass:my_secret_key
```
  
    Объяснение параметров команды:
   * `echo`: выводит текстовую строку в консоли.
   * `"U2FsdGVkX19hZGRlZm9yZW5jZS4="`: ваша зашифрованная ссылка.
   * `|`: передает результат предыдущей команды как ввод следующей команде.
   * `openssl enc`: команда шифрования/дешифрования данных с помощью библиотеки OpenSSL.
      + `-aes-256-cbc`: алгоритм шифрования AES с длиной ключа 256 бит в режиме CBC (Cipher Block Chaining).
      + `-d`: флаг обозначающий операцию дешифрования вместо шифрования.
      + `-a`: указывает использование Base64 кодирования/декодирования при обработке входных данных и вывода результата.
      + `-pass pass:my_secret_key`: задает пароль непосредственно из строки.

После успешного выполнения этой команды вы получите исходный URL-сайт или сообщение, которое было закодировано ранее.

Если возникнут трудности во время процесса или дополнительные вопросы о работе с инструментами криптографии — дайте знать!

4. **Посещение сайта и использование инструмента разработчика**:
   - Откройте полученную ссылку в браузере.
   - На странице будет сообщение с намеком открыть инструменты разработчика (обычно это F12).
   
5. **Запуск JavaScript-кода для получения информации**:
    Вставьте следующий код в консоль инструментов разработчика и выполните его:
    ```
     const hiddenElements = Array.from(document.querySelectorAll('*')).filter(element => {
        const style = window.getComputedStyle(element);
        return style.opacity === '0' || style.display === 'none';
     });
     console.log(hiddenElements);

     hiddenElements.forEach(element => {
        element.style.display = 'block';
        element.style.opacity = '1'; 
     });
    ```

6. **Анализ полученной информации о уязвимостях системы**:
    Проанализируйте данные, которые вы получили через запрос — они могут содержать информацию о текущих уязвимостях вашего локального сервера.

7. **Отключение работы локального сервера**:
    Чтобы остановить работу вашего локального веб-сервера, вернитесь в терминал/консоль SSH и выполните следующую команду (предположительно используется Apache):
    ```bash
    sudo systemctl stop apache2 # Или nginx если он используется вместо Apache
    ```
